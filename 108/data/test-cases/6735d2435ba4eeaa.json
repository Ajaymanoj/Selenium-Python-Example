{
  "uid" : "6735d2435ba4eeaa",
  "name" : "Forgot Password with valid email test",
  "fullName" : "tests.test_forgot_password.TestForgotPassword#test_valid_email",
  "historyId" : "ad76d87e5a831f6b00837c8ab7fbb24e",
  "time" : {
    "start" : 1604864643362,
    "stop" : 1604864656382,
    "duration" : 13020
  },
  "description" : "Forgot password with a valid email address",
  "descriptionHtml" : "<p>Forgot password with a valid email address</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <tests.test_forgot_password.TestForgotPassword object at 0x7ff9ad565af0>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self):\n        email = self.config_reader.config_section_dict(\"Base Url\")[\"username\"]\n        self.pages['forgot_password_page'].send_password_reset_link(email)\n        expected_success_msg = self.json_reader.read_from_json()[\"forgot_password\"][\"success_message\"]\n>       assert_that(expected_success_msg).is_equal_to(self.pages['forgot_password_page'].get_success_msg())\n\ntests/test_forgot_password.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/forgot_password_page.py:27: in get_success_msg\n    return self.get_text(self.SUCCESS_MSG)\npages/base_page.py:38: in get_text\n    el = self._wait.until(expected_conditions.visibility_of_element_located(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"818fcf7695edeb862f9941625c89d30d\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7ff9ad492a90>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "prep_properties",
    "time" : {
      "start" : 1604864478714,
      "stop" : 1604864478715,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "create_driver",
    "time" : {
      "start" : 1604864640170,
      "stop" : 1604864643361,
      "duration" : 3191
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "injector",
    "time" : {
      "start" : 1604864643362,
      "stop" : 1604864643362,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pages",
    "time" : {
      "start" : 1604864643362,
      "stop" : 1604864643362,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Forgot password with a valid email address",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <tests.test_forgot_password.TestForgotPassword object at 0x7ff9ad565af0>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self):\n        email = self.config_reader.config_section_dict(\"Base Url\")[\"username\"]\n        self.pages['forgot_password_page'].send_password_reset_link(email)\n        expected_success_msg = self.json_reader.read_from_json()[\"forgot_password\"][\"success_message\"]\n>       assert_that(expected_success_msg).is_equal_to(self.pages['forgot_password_page'].get_success_msg())\n\ntests/test_forgot_password.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/forgot_password_page.py:27: in get_success_msg\n    return self.get_text(self.SUCCESS_MSG)\npages/base_page.py:38: in get_text\n    el = self._wait.until(expected_conditions.visibility_of_element_located(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"818fcf7695edeb862f9941625c89d30d\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7ff9ad492a90>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "Send password reset link to email address: 'elias123@gmail.com'",
      "time" : {
        "start" : 1604864643363,
        "stop" : 1604864645284,
        "duration" : 1921
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "email",
        "value" : "'elias123@gmail.com'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get success message",
      "time" : {
        "start" : 1604864645285,
        "stop" : 1604864656382,
        "duration" : 11097
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/forgot_password_page.py\", line 27, in get_success_msg\n    return self.get_text(self.SUCCESS_MSG)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 38, in get_text\n    el = self._wait.until(expected_conditions.visibility_of_element_located(webelement))\n  File \"/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "aad437d61471267e",
      "name" : "screenshot on failure: 08/11/2020, 19:44:16",
      "source" : "aad437d61471267e.png",
      "type" : "image/png",
      "size" : 508424
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "create_driver::0",
    "time" : {
      "start" : 1604864656890,
      "stop" : 1604864656971,
      "duration" : 81
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Forgot Password Feature's Functionality"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "epic",
    "value" : "Security"
  }, {
    "name" : "tag",
    "value" : "security"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_forgot_password"
  }, {
    "name" : "subSuite",
    "value" : "TestForgotPassword"
  }, {
    "name" : "host",
    "value" : "fv-az40-174"
  }, {
    "name" : "thread",
    "value" : "5048-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_forgot_password"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "security" ]
  },
  "source" : "6735d2435ba4eeaa.json",
  "parameterValues" : [ ]
}