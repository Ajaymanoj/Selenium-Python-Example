{
  "uid" : "d8da517a225c0052",
  "name" : "Login with valid credentials test",
  "fullName" : "tests.test_login.TestLogin#test_valid_login",
  "historyId" : "38ab8f45abf666d426f8eaf42b1feac7",
  "time" : {
    "start" : 1604786742327,
    "stop" : 1604786756237,
    "duration" : 13910
  },
  "description" : "Test valid login",
  "descriptionHtml" : "<p>Test valid login</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <tests.test_login.TestLogin object at 0x7fe506111df0>\nprep_properties = <utils.config_parser.ConfigParserIni object at 0x7fe506111b80>\n\n    @allure.description(\"Test valid login\")\n    @allure.title(\"Login with valid credentials test\")\n    @pytest.mark.run(order=1)\n    def test_valid_login(self, prep_properties):\n        config_reader = prep_properties\n        username = config_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = config_reader.config_section_dict(\"Base Url\")[\"password\"]\n        json_reader = JsonParser(self._JSON_FILE_NAME)\n        self.pages['about_page'].click_login_link()\n        self.pages['login_page'].login(username, password)\n        expected_page_title = json_reader.read_from_json()[\"login\"][\"ws_page_title\"]\n>       assert_that(expected_page_title).is_equal_to(self.pages['projects_page'].get_title())\n\ntests/test_login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/projects_page.py:150: in get_title\n    return self.get_text(self._PROJECT_PAGE_TITLE)\npages/base_page.py:40: in get_text\n    el = self._wait.until(expected_conditions.visibility_of_element_located(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"13ac6e9512d717b14e42064a6ff7f81b\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fe503502af0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "create_driver",
    "time" : {
      "start" : 1604786738875,
      "stop" : 1604786742326,
      "duration" : 3451
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "pages",
    "time" : {
      "start" : 1604786742326,
      "stop" : 1604786742326,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "injector",
    "time" : {
      "start" : 1604786742326,
      "stop" : 1604786742326,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "Test valid login",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <tests.test_login.TestLogin object at 0x7fe506111df0>\nprep_properties = <utils.config_parser.ConfigParserIni object at 0x7fe506111b80>\n\n    @allure.description(\"Test valid login\")\n    @allure.title(\"Login with valid credentials test\")\n    @pytest.mark.run(order=1)\n    def test_valid_login(self, prep_properties):\n        config_reader = prep_properties\n        username = config_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = config_reader.config_section_dict(\"Base Url\")[\"password\"]\n        json_reader = JsonParser(self._JSON_FILE_NAME)\n        self.pages['about_page'].click_login_link()\n        self.pages['login_page'].login(username, password)\n        expected_page_title = json_reader.read_from_json()[\"login\"][\"ws_page_title\"]\n>       assert_that(expected_page_title).is_equal_to(self.pages['projects_page'].get_title())\n\ntests/test_login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/projects_page.py:150: in get_title\n    return self.get_text(self._PROJECT_PAGE_TITLE)\npages/base_page.py:40: in get_text\n    el = self._wait.until(expected_conditions.visibility_of_element_located(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"13ac6e9512d717b14e42064a6ff7f81b\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7fe503502af0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "Click Login link",
      "time" : {
        "start" : 1604786742327,
        "stop" : 1604786742797,
        "duration" : 470
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Log in with username: 'eshorrosh@gmail.com' and password: 'El123456789'",
      "time" : {
        "start" : 1604786742797,
        "stop" : 1604786745130,
        "duration" : 2333
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'eshorrosh@gmail.com'"
      }, {
        "name" : "password",
        "value" : "'El123456789'"
      } ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Get projects' page title",
      "time" : {
        "start" : 1604786745131,
        "stop" : 1604786756236,
        "duration" : 11105
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/projects_page.py\", line 150, in get_title\n    return self.get_text(self._PROJECT_PAGE_TITLE)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 40, in get_text\n    el = self._wait.until(expected_conditions.visibility_of_element_located(webelement))\n  File \"/opt/hostedtoolcache/Python/3.9.0/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "1384895c9a748ad9",
      "name" : "screenshot on failure: 07/11/2020, 22:05:56",
      "source" : "1384895c9a748ad9.png",
      "type" : "image/png",
      "size" : 58875
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "create_driver::0",
    "time" : {
      "start" : 1604786756611,
      "stop" : 1604786756664,
      "duration" : 53
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "story",
    "value" : "Login Feature's Functionality"
  }, {
    "name" : "epic",
    "value" : "Security"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "tag",
    "value" : "security"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "fv-az40-174"
  }, {
    "name" : "thread",
    "value" : "4716-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "security", "run(order=1)" ]
  },
  "source" : "d8da517a225c0052.json",
  "parameterValues" : [ ]
}